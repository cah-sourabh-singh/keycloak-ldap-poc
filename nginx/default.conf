server {
  listen 80 default_server;

  proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address 
  proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
  proxy_set_header Host $host; # to forward the original host requested by the client

  location / {
      proxy_pass http://host.docker.internal:3000;
      proxy_intercept_errors on;
      error_page 404 = /index.html;
      proxy_set_header Host $host;
  }

  location /sockjs-node {
      proxy_pass http://host.docker.internal:3000;
      proxy_http_version 1.1;
  }

  location /api {
      rewrite /api/(.*) /$1 break;
      proxy_pass http://host.docker.internal:8060;
  }

  location /auth {
    proxy_pass http://host.docker.internal:8080;
    proxy_set_header    Host               $host;
    proxy_set_header    X-Real-IP          $remote_addr;
    proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header    X-Forwarded-Host   $host;
    proxy_set_header    X-Forwarded-Server $host;
    proxy_set_header    X-Forwarded-Port   $server_port;
    proxy_set_header    X-Forwarded-Proto  $scheme;
  }
}
